version: 2

aliases:
  # Workflow filters
  - &filter-only-release
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
  - &filter-not-release-or-master
    tags:
      ignore: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
    branches:
      ignore: master
  - &filter-only-master
    branches:
      only: master

defaults: &defaults
  working_directory: ~/kentik-connect-app
  docker:
    - image: circleci/node:14-stretch-browsers
  environment:
    PLUGIN_NAME: kentik-connect-app

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Build
          command: |
            yarn install
            npm run build
            sudo apt-get install jq
            VERSION=`cat dist/plugin.json|jq '.info.version'| sed s/\"//g`
            # create zip file
            cd ~
            echo "Creating ZIP"
            cp -r ${PLUGIN_NAME}/dist/ /tmp/${PLUGIN_NAME}
            cd /tmp
            zip \
              -r ${PLUGIN_NAME}-${VERSION}.zip \
              ${PLUGIN_NAME}
            # create tar file
            echo "Creating TAR"
            tar \
              -zcvf ${PLUGIN_NAME}-${VERSION}.tar.gz \
              ${PLUGIN_NAME}
            # create artifacts
            mkdir -p ~/${PLUGIN_NAME}/artifacts
            mv ${PLUGIN_NAME}-${VERSION}.zip ~/${PLUGIN_NAME}/artifacts/
            mv ${PLUGIN_NAME}-${VERSION}.tar.gz ~/${PLUGIN_NAME}/artifacts/
          no_output_timeout: 5m
      - save_cache:
          name: Save NPM Package Cache
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/npm
      - persist_to_workspace:
          root: .
          paths:
            - artifacts
            - dist
      - store_artifacts:
          path: artifacts
      - store_artifacts:
          path: dist

  tslint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "yarn.lock" }}
      - run:
          name: TSLint
          command: |
            yarn install
            npm run tslint

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Test
          command: |
            yarn install
            sudo npm install -g jest
            npm test

  publish_github_release:
    <<: *defaults
    docker:
      - image: cibuilds/github:0.12
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b7:0b:7a:ce:3d:ef:22:1c:cd:97:7f:33:93:e6:db:fe"
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            apk add --update --no-cache jq
            RELEASE_NOTES=`awk '/## \[/{if(flag){exit};flag=1;}flag' CHANGELOG.md`
            VERSION=`cat dist/plugin.json|jq '.info.version'| sed s/\"//g`
            git config user.email "dev@corpglory.com"
            git config user.name "CircleCI"
            git checkout -b release-${VERSION}
            git add --force dist/
            git commit -m "automated release $VERSION [skip ci]"
            git push -f origin release-${VERSION}
            git tag -f v${VERSION}
            git push -f origin v${VERSION}
            ghr \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -n "v${VERSION}" \
              -b "${RELEASE_NOTES}" \
              v${VERSION} \
              ./artifacts/

workflows:
  version: 2
  build-master:
    jobs:
      - tslint:
          filters: *filter-only-master
      - test:
          requires:
            - tslint
          filters: *filter-only-master
      - build:
          requires:
            - test
          filters: *filter-only-master
      - hold:
          type: approval
          requires:
            - build
          filters: *filter-only-master
      - publish_github_release:
          requires:
            - hold
          filters: *filter-only-master

  build-branches-and-prs:
    jobs:
      - tslint:
          filters: *filter-not-release-or-master
      - test:
          requires:
            - tslint
          filters: *filter-not-release-or-master
      - build:
          requires:
            - test
          filters: *filter-not-release-or-master
